/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.person;

import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import model.person;
import model.personDirectory;

/**
 *
 * @author ruchachotalia
 */
public class managePerson extends javax.swing.JPanel {

    /**
     * Creates new form managePerson
     */
    private personDirectory personDirectory;
    private JPanel userProcessContainer;
    public managePerson(JPanel userProcessContainer, personDirectory personDirectory) {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        persondirectoryLbl = new javax.swing.JLabel();
        editpersonBtn = new javax.swing.JButton();
        viewpersonBtn = new javax.swing.JButton();
        deletepersonBtn = new javax.swing.JButton();
        createpersonBtn = new javax.swing.JButton();
        searchpersonBtn = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();
        refreshBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        viewpersonTable = new javax.swing.JTable();

        persondirectoryLbl.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        persondirectoryLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        persondirectoryLbl.setText("Persons Directory");

        editpersonBtn.setText("Edit Person");
        editpersonBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editpersonBtnActionPerformed(evt);
            }
        });

        viewpersonBtn.setText("View Person");
        viewpersonBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewpersonBtnActionPerformed(evt);
            }
        });

        deletepersonBtn.setText("Delete Person");
        deletepersonBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletepersonBtnActionPerformed(evt);
            }
        });

        createpersonBtn.setText("Create Person");
        createpersonBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createpersonBtnActionPerformed(evt);
            }
        });

        searchpersonBtn.setText("Search Person");
        searchpersonBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchpersonBtnActionPerformed(evt);
            }
        });

        backBtn.setText("<<Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        refreshBtn.setText("Refresh");
        refreshBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshBtnActionPerformed(evt);
            }
        });

        viewpersonTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Person Name", "Age", "Patient ID"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(viewpersonTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(searchpersonBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(refreshBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(createpersonBtn)
                        .addGap(18, 18, 18)
                        .addComponent(viewpersonBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(editpersonBtn)
                        .addGap(18, 18, 18)
                        .addComponent(deletepersonBtn))
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(223, 223, 223)
                        .addComponent(persondirectoryLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(36, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(persondirectoryLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(viewpersonBtn)
                    .addComponent(editpersonBtn)
                    .addComponent(deletepersonBtn)
                    .addComponent(backBtn)
                    .addComponent(createpersonBtn))
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchpersonBtn)
                    .addComponent(refreshBtn))
                .addContainerGap(170, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void editpersonBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editpersonBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow= viewpersonTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row from table.",
                "Error", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        person person=(person) viewpersonTable.getValueAt(selectedRow, 0);
        /*pass userProcessContainer and Patient*/
        viewUpdatePersonDetalis vupersondJPanel=new viewUpdatePersonDetalis(userProcessContainer, person,Boolean.TRUE);
        userProcessContainer.add("vupersondJPanel", vupersondJPanel);
        CardLayout layout=(CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_editpersonBtnActionPerformed

    private void viewpersonBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewpersonBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow= viewpersonTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row from table.",
                "Error", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        person person=(person) viewpersonTable.getValueAt(selectedRow, 0);
        /*pass userProcessContainer and Patient*/
        viewUpdatePersonDetalis vupersondJPanel=
        new viewUpdatePersonDetalis(userProcessContainer, person,Boolean.FALSE);
        userProcessContainer.add("vupersondJPanel", vupersondJPanel);
        CardLayout layout=(CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_viewpersonBtnActionPerformed

    private void deletepersonBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletepersonBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow= viewpersonTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row from table.",
                "Error", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        person person=(person) viewpersonTable.getValueAt(selectedRow, 0);
        /*Ask confirmation*/
        int flag= JOptionPane.showConfirmDialog(this, "Are you sure want to remove?",
            "Warning", JOptionPane.YES_NO_OPTION);
//        if(flag==0)
//        {
//            personDirectory.deletePerson(person);
//            populatePersonsTable(personDirectory.getPersonHistory());
//        }
    }//GEN-LAST:event_deletepersonBtnActionPerformed

    private void createpersonBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createpersonBtnActionPerformed
        // TODO add your handling code here:
//        createPerson cpJPanel= new createPerson(userProcessContainer, personDirectory);
//        userProcessContainer.add("cpJPanel", cpJPanel);
//        CardLayout layout=(CardLayout) userProcessContainer.getLayout();
//        layout.next(userProcessContainer);
    }//GEN-LAST:event_createpersonBtnActionPerformed

    private void searchpersonBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchpersonBtnActionPerformed
        // TODO add your handling code here:
//        String key= searchBoxJTextField.getText();
//        if(key.length()==0)
//        {
//            JOptionPane.showMessageDialog(this, "Please enter key.",
//                "Error", JOptionPane.ERROR_MESSAGE);
//            return;
//        }
//        ArrayList<person> searchPersons;
//        searchPersons=personDirectory.searchPerson(key);
//        populateviewpersonTable(searchPersons);
    }//GEN-LAST:event_searchpersonBtnActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        //System.out.println(userProcessContainer.getLayout());
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backBtnActionPerformed

    private void refreshBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshBtnActionPerformed
        // TODO add your handling code here:
//        searchBoxJTextField.setText("");
//        populatePersonsTable(personDirectory.getPersonHistory());
    }//GEN-LAST:event_refreshBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JButton createpersonBtn;
    private javax.swing.JButton deletepersonBtn;
    private javax.swing.JButton editpersonBtn;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel persondirectoryLbl;
    private javax.swing.JButton refreshBtn;
    private javax.swing.JButton searchpersonBtn;
    private javax.swing.JButton viewpersonBtn;
    private javax.swing.JTable viewpersonTable;
    // End of variables declaration//GEN-END:variables
}
